<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\enterprise\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Targets>
  <Target Name="C:\private\source\SurvivalGameApp\Source\bin\Debug\SurvivalGameApp.Main.exe">
   <Modules>
    <Module Name="survivalgameapp.main.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">'SurvivalGameApp.Main.exe' を厳密な名前キーで署名します。</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">外部から参照可能な型を公開するため、'SurvivalGameApp.Main.exe' を CLSCompliant(true) に設定します。</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">アセンブリ 'SurvivalGameApp.Main.exe' には ResX ベースのリソース ファイルが含まれているため、NeutralResourcesLanguage 属性を設定し、アセンブリ内のリソースの言語を指定してください。これにより、最初にリソースが取得されるときのルックアップのパフォーマンスが向上する可能性があります。</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="SurvivalGameApp.Main.Command">
       <Types>
        <Type Name="UserCommand" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BackOrCloseWindow" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_BackOrCloseWindow(System.Windows.Input.ICommand)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\private\source\SurvivalGameApp\Source\SurvivalGameApp.Main\Command" File="UserCommand.cs" Line="12">'UserCommand.BackOrCloseWindow.set(ICommand)' は、アップストリームのパブリックな、または保護された呼び出し側を含んでいません。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SurvivalGameApp.Main.Common">
       <Types>
        <Type Name="NavigationHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LoadModule(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Module" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\private\source\SurvivalGameApp\Source\SurvivalGameApp.Main\Common" File="NavigationHelper.cs" Line="38">'module' に変更して、メンバー 'NavigationHelper.LoadModule(string)' でパラメーター名 'ModuleName' の 'Module' の大文字と小文字の指定を訂正してください。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RegionsExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Name(SurvivalGameApp.Main.Common.Regions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\private\source\SurvivalGameApp\Source\SurvivalGameApp.Main\Common" File="NavigationHelper.cs" Line="27">メソッド 'RegionsExtensions.Name(this Regions)' で、パラメーター名 'e' よりも意味のある名前を指定することを考慮してください。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SurvivalGameApp.Main.Controls">
       <Types>
        <Type Name="TimeLabel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\private\source\SurvivalGameApp\Source\SurvivalGameApp.Main\Controls" File="TimeLabel.cs" Line="28">すべてのフィールドを、それらが宣言されたときに 'TimeLabel' で初期化して、明示的な静的コンストラクターを削除します。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnApplyTemplate()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\private\source\SurvivalGameApp\Source\SurvivalGameApp.Main\Controls" File="TimeLabel.cs" Line="52">'DateTime.ToString(string)' の振る舞いは、現在のユーザーのロケール設定によって異なる場合があるため、'TimeLabel.OnApplyTemplate()' 内のこの呼び出しを 'DateTime.ToString(string, IFormatProvider)' の呼び出しで置き換えます。'DateTime.ToString(string, IFormatProvider)' の結果をユーザーに対して表示する場合は、'IFormatProvider' パラメーターに 'CultureInfo.CurrentCulture' を指定します。結果をディスクやデータベースに保持する場合など、ソフトウェアで結果を格納してアクセスする場合は、'CultureInfo.InvariantCulture' を指定します。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TimeTextBlock" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\private\source\SurvivalGameApp\Source\SurvivalGameApp.Main\Controls" File="TimeTextBlock.cs" Line="22">すべてのフィールドを、それらが宣言されたときに 'TimeTextBlock' で初期化して、明示的な静的コンストラクターを削除します。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SurvivalGameApp.Main.ViewModels">
       <Types>
        <Type Name="MenuViewModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\private\source\SurvivalGameApp\Source\SurvivalGameApp.Main\ViewModels" File="MenuViewModel.cs" Line="18">'MenuViewModel.MenuViewModel()' には、クラスによって定義された仮想メソッドへの呼び出しの原因となる呼び出しチェーンが含まれます。予期しない結果となっていないことを次の呼び出し履歴から確認してください: &#xD;&#xA;&#xD;&#xA;MenuViewModel..ctor()&#xD;&#xA;MenuViewModel.set_Command(ICommand):Void&#xD;&#xA;BindableBase.SetProperty&lt;T&gt;(T&amp;, T, String):Boolean</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SurvivalGameApp.Main.Views">
       <Types>
        <Type Name="Shell" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BindingSetting()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\private\source\SurvivalGameApp\Source\SurvivalGameApp.Main\Views" File="Shell.xaml.cs" Line="34">'Shell.BindingSetting()' は、アップストリームのパブリックな、または保護された呼び出し側を含んでいません。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowLong(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">'Shell.GetWindowLong(IntPtr, int)' は P/Invoke メソッドであるため、NativeMethods、SafeNativeMethods または UnsafeNativeMethods に名前指定されたクラスで定義しなければなりません。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnSourceInitialized(System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="SurvivalGameApp.Main.Views.Shell.SetWindowLong(System.IntPtr,System.Int32,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\private\source\SurvivalGameApp\Source\SurvivalGameApp.Main\Views" File="Shell.xaml.cs" Line="46">'Shell.OnSourceInitialized(EventArgs)' は 'Shell.SetWindowLong(IntPtr, int, int)' を呼び出しますが、メソッドから返される HRESULT またはエラー コードは使用されません。このため、エラー条件での予期しない振る舞いやリソース不足が発生する可能性があります。条件ステートメントで結果を使用するか、結果を変数に割り当てるか、引数として他のメソッドに渡してください。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowLong(System.IntPtr,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-04-14 03:42:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">'Shell.SetWindowLong(IntPtr, int, int)' は P/Invoke メソッドであるため、NativeMethods、SafeNativeMethods または UnsafeNativeMethods に名前指定されたクラスで定義しなければなりません。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>アセンブリには有効な厳密な名前が必要です</Name>
   <Description>アセンブリに厳密名がない、無効な名前が指定されている、またはコンピューターの構成により厳密名が有効ではありません。アセンブリは、この状態では配置できません。この問題の一般的な原因は次のとおりです: 1) アセンブリの内容が署名されてから変更された。2) 署名処理に失敗した。3) アセンブリが遅延署名された。4) 確認の省略を許可するレジストリ キーが、許可されるべきでない場所に存在していた。</Description>
   <Resolution Name="NoStrongName">{0} を厳密な名前キーで署名します。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>呼び出されていないプライベート コードを使用しません</Name>
   <Description>外部から参照可能ではない、不明なランタイム エントリ ポイントである、呼び出されていないコードがあります。この違反がエラーを発生させる場合、Visual Studio コード分析チームに問題報告を送信してください。</Description>
   <Resolution Name="Default">{0} は、アップストリームのパブリックな、または保護された呼び出し側を含んでいません。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>コンストラクターのオーバーライド可能なメソッドを呼び出しません</Name>
   <Description>クラスで定義された仮想メソッドはコンストラクターから呼び出すことができません。派生クラスがメソッドをオーバーライドした場合、派生クラス コンストラクターの前に、派生クラス バージョンが呼び出されます。</Description>
   <Resolution Name="Default">{0} には、クラスによって定義された仮想メソッドへの呼び出しの原因となる呼び出しチェーンが含まれます。予期しない結果となっていないことを次の呼び出し履歴から確認してください: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>メソッドの結果を無視しない</Name>
   <Description>新しい文字列インスタンスを返すメソッドの結果は、変数に割り当てられた後、使用される必要があります。String.ToLower() などの、新しいオブジェクトを作成するメソッドの結果が変数に割り当てられていない場合、その呼び出しは無駄になります。</Description>
   <Resolution Name="HResultOrErrorCode">{0} は {1} を呼び出しますが、メソッドから返される HRESULT またはエラー コードは使用されません。このため、エラー条件での予期しない振る舞いやリソース不足が発生する可能性があります。条件ステートメントで結果を使用するか、結果を変数に割り当てるか、引数として他のメソッドに渡してください。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>識別子では、大文字と小文字が正しく区別されなければなりません</Name>
   <Description>型、名前空間、メンバー識別子は pascal 規約、パラメーター識別子は camel 規約に従って大文字小文字の使い分けを行います。識別子に含まれる 2 文字の略語は大文字にします。たとえば、System.Io ではなく System.IO とします。3 文字以上の略語には pascal 規約を使用します。たとえば、System.XML ではなく System.Xml とします。pascal 規約では、各単語の最初の文字を大文字にします (例: BackColor)。camel 規約では、最初の単語の最初の文字を小文字にし、以降の単語についてはすべて最初の文字を大文字にします (例: backgroundColor)。一部の 2 文字の略語については、小文字を残すことが一般的な場合もありますが、その理由による規則違反が例外として認められているわけではなりません。たとえば、"DbConnection" は一般的に使用されますが、誤りです。DBConnection を使用してください。このような規則違反は、既存のマネージでないシンボル スキームとの互換性を維持するために必要な場合もあります。ただし、一般的には、このようなシンボルは使用先のアセンブリの外部で参照可能にならないようにしてください。</Description>
   <Resolution Name="MemberParameter">'{3}' に変更して、メンバー {0} でパラメーター名 {2} の '{1}' の大文字と小文字の指定を訂正してください。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>識別子は正しく入力されなければなりません。</Name>
   <Description>識別子を作成する個々の単語を短縮化することはできません。それらは正しくスペルされなければなりません。この規則が、認識されるべき用語に対して正しくない正当性を生成する場合、その単語を FxCop カスタム辞書に追加してください。</Description>
   <Resolution Name="MemberParameterMoreMeaningfulName">メソッド {0} で、パラメーター名 {1} よりも意味のある名前を指定することを考慮してください。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>参照型の静的フィールドをインラインで初期化します</Name>
   <Description>静的フィールドは定義時に初期化されるべきです。明示的な静的コンストラクターで静的なデータを初期化すると、コードのパフォーマンスを低下させます。</Description>
   <Resolution Name="Default">すべてのフィールドを、それらが宣言されたときに {0} で初期化して、明示的な静的コンストラクターを削除します。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182275.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>アセンブリに CLSCompliantAttribute を設定します</Name>
   <Description>アセンブリは、CLSCompliant 属性を使用して、その CLS 準拠を明示しなければなりません。この属性を伴わないアセンブリは、CLS に準拠しません。アセンブリ、モジュール、および型は、部分的に CLS 準拠していないくても、CLS 準拠に設定することができます。次の規則が適用されます: 1) 要素が CLSCompliant に設定されている場合、準拠していないすべてのメンバーの CLSCompliant 属性は false に設定されていなければなりません。2) CLS 準拠していない各メンバーには、同等の CLS 準拠している代替メンバーが指定されなければなりません。</Description>
   <Resolution Name="Default">外部から参照可能な型を公開するため、{0} を CLSCompliant(true) に設定します。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>アセンブリを NeutralResourcesLanguageAttribute に設定します</Name>
   <Description>NeutralResourcesLanguage 属性は、アセンブリ用のニュートラル カルチャのリソースを表示するために使用する言語を ResourceManager に通知します。ニュートラル リソース言語と同じカルチャのリソースを検索する場合、ResourceManager は自動的にメイン アセンブリ内のリソースを使用します。このとき、現在のスレッドでは、現在のユーザー インターフェイス カルチャのサテライト アセンブリを検索しません。これにより、読み込んだ最初のリソースを検索するパフォーマンスが向上し、作業セットを減らすことができます。</Description>
   <Resolution Name="Default">アセンブリ {0} には ResX ベースのリソース ファイルが含まれているため、NeutralResourcesLanguage 属性を設定し、アセンブリ内のリソースの言語を指定してください。これにより、最初にリソースが取得されるときのルックアップのパフォーマンスが向上する可能性があります。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>P/Invoke を NativeMethods クラスに移動します</Name>
   <Description>この型は、DllImport 属性を持つメンバーを含んでいます。DllImport 属性を持つメンバーは NativeMethods、SafeNativeMethods、UnsafeNativeMethods と名前付けられたクラス内に含まれていなければなりません。</Description>
   <Resolution Name="Default">{0} は P/Invoke メソッドであるため、NativeMethods、SafeNativeMethods または UnsafeNativeMethods に名前指定されたクラスで定義しなければなりません。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>IFormatProvider を指定します</Name>
   <Description>IFormatProvider 引数を取得するオーバーロードが存在する場合、それを取得しないオーバーロードのために必ず呼び出される必要があります。ランタイムのメソッドは、文字列形式から、または文字列形式へ値を変換したり、値が変換される方法を示す書式指定子と呼ばれる、1 つ以上の文字を含む文字列パラメーターを取得することがあります。書式指定子の意味がカルチャによって異なる場合、書式設定オブジェクトは、文字列形式で使用された実際の文字を提供します。変換および比較の振る舞いがカルチャ間で変わらないシナリオでは、CultureInfo.InvariantCulture を指定してください。それ以外の場合は、CultureInfo.CurrentCulture を指定してください。</Description>
   <Resolution Name="IFormatProviderAlternateString">{0} の振る舞いは、現在のユーザーのロケール設定によって異なる場合があるため、{1} 内のこの呼び出しを {2} の呼び出しで置き換えます。{2} の結果をユーザーに対して表示する場合は、'IFormatProvider' パラメーターに {3} を指定します。結果をディスクやデータベースに保持する場合など、ソフトウェアで結果を格納してアクセスする場合は、{4} を指定します。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">カテゴリ</String>
  <String Key="Certainty">確実性</String>
  <String Key="CollapseAll">すべて折りたたむ</String>
  <String Key="CheckId">ID の確認</String>
  <String Key="Error">エラー</String>
  <String Key="Errors">エラー</String>
  <String Key="ExpandAll">すべて展開</String>
  <String Key="Help">ヘルプ</String>
  <String Key="Line">行</String>
  <String Key="Messages">メッセージ</String>
  <String Key="LocationNotStoredInPdb">[場所は Pdb に格納されていません]</String>
  <String Key="Project">プロジェクト</String>
  <String Key="Resolution">解像度</String>
  <String Key="Rule">ルール</String>
  <String Key="RuleFile">規則ファイル</String>
  <String Key="RuleDescription">規則の説明</String>
  <String Key="Source">ソース</String>
  <String Key="Status">状態</String>
  <String Key="Target">ターゲット</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">コード分析レポート</String>
 </Localized>
</FxCopReport>
